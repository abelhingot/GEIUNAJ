datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Access {
  @@map("access")
  id           Int      @id @default(autoincrement())
  type_user_id Int
  type_user    TypeUser @relation(fields: [type_user_id], references: [id])

  @@index([type_user_id])
}

model TypeUser {
  @@map("typeuser")
  id        Int      @id @default(autoincrement())
  type_name String   @db.VarChar(45)
  users     User[]
  access    Access[]
}

model User {
  @@map("user")
  id           Int      @id @default(autoincrement())
  name         String   @db.VarChar(255)
  email        String   @unique
  telefono     String   @db.VarChar(45)
  password     String   @db.VarChar(255)
  type_user_id Int
  sede_id      Int?
  type_user    TypeUser @relation(fields: [type_user_id], references: [id])
  sede         Sede?    @relation(fields: [sede_id], references: [id])

  @@index([type_user_id])
}

model Sede {
  @@map("sede")
  id                         Int                          @id @default(autoincrement())
  name                       String                       @db.VarChar(45)
  combustibles               Combustible[]
  fertilizante               Fertilizante[]
  ConsumoPapel               ConsumoPapel[]
  combustibleCalculos        combustibleCalculos[]
  taxi                       Taxi[]
  fertilizanteCalculos       fertilizanteCalculos[]
  area                       area[]
  User                       User[]
  combustibleCalculosDetail  combustibleCalculosDetail[]
  ConsumoPapelCalculosDetail ConsumoPapelCalculosDetail[]
  ConsumoPapelCalculos       ConsumoPapelCalculos[]
  fertilizanteCalculosDetail fertilizanteCalculosDetail[]
}

model tipoCombustibleFactor {
  @@map("tipocombustiblefactor")
  id                        Int                         @id @default(autoincrement())
  valorCalorico             Float                       @db.Float
  factorEmisionCO2          Float                       @db.Float
  factorEmisionCH4          Float                       @db.Float
  factorEmisionN2O          Float                       @db.Float
  anio_id                   Int
  tipoCombustible_id        Int
  created_at                DateTime
  updated_at                DateTime
  anio                      Anio                        @relation(fields: [anio_id], references: [id])
  tipoCombustible           tipoCombustible             @relation(fields: [tipoCombustible_id], references: [id])
  combustibleCalculosDetail combustibleCalculosDetail[]
}

model tipoCombustible {
  @@map("tipocombustible")
  id          Int    @id @default(autoincrement())
  nombre      String @db.VarChar(45)
  abreviatura String @db.VarChar(45)
  unidad      String @db.VarChar(45)

  created_at            DateTime
  updated_at            DateTime
  tipoCombustibleFactor tipoCombustibleFactor[]
  Combustible           Combustible[]
  combustibleCalculos   combustibleCalculos[]
}

model Mes {
  @@map("mes")
  id             Int              @id @default(autoincrement())
  nombre         String           @db.VarChar(45)
  created_at     DateTime
  updated_at     DateTime
  combustibles   Combustible[]
  Taxi           Taxi[]
  consumoEnergia consumoEnergia[]
  ConsumoAgua    ConsumoAgua[]
}

model Anio {
  @@map("anio")
  id         Int      @id @default(autoincrement())
  nombre     String   @db.VarChar(45)
  created_at DateTime
  updated_at DateTime

  combustibles               Combustible[]
  fertilizante               Fertilizante[]
  consumoPapel               ConsumoPapel[]
  Taxi                       Taxi[]
  consumoEnergia             consumoEnergia[]
  factorConversionSEIN       factorConversionSEIN[]
  ConsumoAgua                ConsumoAgua[]
  tipoCombustibleFactor      tipoCombustibleFactor[]
  FactorEmisionAgua          FactorEmisionAgua[]
  FactorTipoPapel            FactorTipoPapel[]
  ConsumoPapelCalculosDetail ConsumoPapelCalculosDetail[]
  FactorEmisionFertilizante  FactorEmisionFertilizante[]
}

model Combustible {
  @@map("combustible")
  id                 Int    @id @default(autoincrement())
  tipo               String @db.VarChar(45)
  tipoEquipo         String @db.VarChar(45)
  consumo            Float  @db.Float
  tipoCombustible_id Int
  mes_id             Int
  anio_id            Int
  sede_id            Int
  anio_mes           Int

  created_at DateTime
  updated_at DateTime

  tipoCombustible tipoCombustible? @relation(fields: [tipoCombustible_id], references: [id])
  mes             Mes?             @relation(fields: [mes_id], references: [id])
  anio            Anio?            @relation(fields: [anio_id], references: [id])
  sede            Sede?            @relation(fields: [sede_id], references: [id])
}

model Documento {
  @@map("documento")
  id        Int    @id @default(autoincrement())
  nombre    String @db.VarChar(255)
  contenido Bytes

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  fertilizante Fertilizante?
}

model TipoFertilizante {
  @@map("tipofertilizante")
  id                  Int      @id @default(autoincrement())
  clase               String   @db.VarChar(45) // Organico o Sintetico
  nombre              String   @db.VarChar(45)
  porcentajeNitrogeno Float    @db.Float
  unidad              String   @db.VarChar(45)
  created_at          DateTime @default(now())
  updated_at          DateTime @updatedAt

  fertilizantes              Fertilizante[]
  fertilizanteCalculos       fertilizanteCalculos[]
  fertilizanteCalculosDetail fertilizanteCalculosDetail[]
}

model FactorEmisionFertilizante {
  @@map("factoremisionfertilizante")
  id      Int   @id @default(autoincrement())
  valor   Float @db.Float
  anio_id Int

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  anio                       Anio                         @relation(fields: [anio_id], references: [id])
  fertilizanteCalculosDetail fertilizanteCalculosDetail[]
}

model Fertilizante {
  @@map("fertilizante")
  id                  Int     @id @default(autoincrement())
  tipoFertilizante_id Int
  cantidad            Float   @db.Float
  is_ficha            Boolean @default(false)
  ficha_id            Int?    @unique
  sede_id             Int?
  anio_id             Int?

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  tipoFertilizante TipoFertilizante? @relation(fields: [tipoFertilizante_id], references: [id])
  ficha            Documento?        @relation(fields: [ficha_id], references: [id])
  sede             Sede?             @relation(fields: [sede_id], references: [id])
  anio             Anio?             @relation(fields: [anio_id], references: [id])
}

model TipoPapel {
  @@map("tipopapel")
  id                   Int     @id @default(autoincrement())
  nombre               String  @db.VarChar(50)
  largo                Float   @db.Float //cm
  ancho                Float   @db.Float //cm
  area                 Float   @db.Float //m2
  gramaje              Float   @db.Float //densidad
  unidad_paquete       String  @db.VarChar(45)
  porcentaje_reciclado Float?  @db.Float
  porcentaje_virgen    Float?  @db.Float
  nombre_certificado   String? @db.VarChar(50)

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  consumoPapel         ConsumoPapel[]
  FactorTipoPapel      FactorTipoPapel[]
  ConsumoPapelCalculos ConsumoPapelCalculos[]
}

model FactorTipoPapel {
  @@map("factortipopapel")
  id          Int   @id @default(autoincrement())
  tipoPapelId Int
  reciclado   Float @db.Float
  virgen      Float @db.Float
  anioId      Int

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  tipoPapel                  TipoPapel?                   @relation(fields: [tipoPapelId], references: [id])
  anio                       Anio?                        @relation(fields: [anioId], references: [id])
  ConsumoPapelCalculosDetail ConsumoPapelCalculosDetail[]
}

model ConsumoPapel {
  @@map("consumopapel")
  id               Int     @id @default(autoincrement())
  tipoPapel_id     Int
  cantidad_paquete Int
  comentario       String?
  anio_id          Int
  sede_id          Int?

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  tipoPapel TipoPapel @relation(fields: [tipoPapel_id], references: [id])
  anio      Anio      @relation(fields: [anio_id], references: [id])
  sede      Sede?     @relation(fields: [sede_id], references: [id])
}

model ConsumoPapelCalculos {
  @@map("consumopapelcalculos")
  id           Int   @id @default(autoincrement())
  tipoPapel_id Int
  cantidad     Float @db.Float // registro
  consumo      Float @db.Float
  period_id    Int
  sede_id      Int
  totalGEI     Float @db.Float

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  tipoPapel TipoPapel      @relation(fields: [tipoPapel_id], references: [id])
  sede      Sede?          @relation(fields: [sede_id], references: [id])
  Periodo   PeriodoCalculo @relation(fields: [period_id], references: [id])

  ConsumoPapelCalculosDetail ConsumoPapelCalculosDetail[]
}

model ConsumoPapelCalculosDetail {
  @@map("consumopapelcalculosdetail")
  id                     Int   @id @default(autoincrement())
  cantidad               Float @db.Float // registro
  factorTipoPapelId      Int
  consumo                Float @db.Float
  totalGEI               Float @db.Float
  consumoPapelCalculosId Int   @db.Int
  sedeId                 Int   @db.Int
  anioId                 Int   @db.Int

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  factorTipoPapel      FactorTipoPapel      @relation(fields: [factorTipoPapelId], references: [id])
  consumoPapelCalculos ConsumoPapelCalculos @relation(fields: [consumoPapelCalculosId], references: [id])
  sede                 Sede?                @relation(fields: [sedeId], references: [id])
  anio                 Anio?                @relation(fields: [anioId], references: [id])
}

// CALCULOS
// POTENCIAL DE CALIENTAMIENTO GLOBAL
model GWP {
  @@map("gwp")
  id         Int      @id @default(autoincrement())
  nombre     String   @db.VarChar(45)
  formula    String   @db.VarChar(45)
  valor      Float    @db.Float
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
}

// A1_1 COMBUSTIBLES
model combustibleCalculos {
  @@map("combustiblecalculos")
  id                Int    @id @default(autoincrement())
  tipo              String @db.VarChar(45)
  consumoTotal      Float  @db.Float
  consumo           Float  @db.Float
  emisionCO2        Float  @db.Float
  emisionCH4        Float  @db.Float
  emisionN2O        Float  @db.Float
  totalGEI          Float  @db.Float
  sedeId            Int    @db.Int
  periodoCalculoId  Int?   @db.Int
  tipoCombustibleId Int

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  sede            Sede?            @relation(fields: [sedeId], references: [id])
  PeriodoCalculo  PeriodoCalculo?  @relation(fields: [periodoCalculoId], references: [id])
  tipoCombustible tipoCombustible? @relation(fields: [tipoCombustibleId], references: [id])

  combustibleCalculosDetail combustibleCalculosDetail[]
}

model combustibleCalculosDetail {
  @@map("combustiblecalculosdetail")
  id                      Int    @id @default(autoincrement())
  tipo                    String @db.VarChar(45)
  tipoCombustibleFactorId Int
  consumoTotal            Float  @db.Float
  valorCalorico           Float  @db.Float
  consumo                 Float  @db.Float
  emisionCO2              Float  @db.Float
  emisionCH4              Float  @db.Float
  emisionN2O              Float  @db.Float
  totalGEI                Float  @db.Float
  sedeId                  Int    @db.Int
  combustibleCalculosId   Int    @db.Int

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  tipoCombustibleFactor tipoCombustibleFactor? @relation(fields: [tipoCombustibleFactorId], references: [id])
  sede                  Sede?                  @relation(fields: [sedeId], references: [id])
  combustibleCalculos   combustibleCalculos?   @relation(fields: [combustibleCalculosId], references: [id])
}

// // A1_5 - FERTILIZANTES
// model factorEmision {
//   id                   Int                    @id @default(autoincrement())
//   valor                Float          s        @db.Float
//   fertilizanteCalculos fertilizanteCalculos[]
// }

model fertilizanteCalculos {
  @@map("fertilizantecalculos")
  id                     Int    @id @default(autoincrement())
  tipofertilizanteId     Int
  consumoTotal           Float  @db.Float
  cantidadAporte         Float  @db.Float
  emisionDirecta         Float  @db.Float
  totalEmisionesDirectas Float  @db.Float
  emisionGEI             Float? @db.Float
  sedeId                 Int    @db.Int
  periodoCalculoId       Int?   @db.Int

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  sede                       Sede?                        @relation(fields: [sedeId], references: [id])
  periodoCalculo             PeriodoCalculo?              @relation(fields: [periodoCalculoId], references: [id])
  TipoFertilizante           TipoFertilizante?            @relation(fields: [tipofertilizanteId], references: [id])
  fertilizanteCalculosDetail fertilizanteCalculosDetail[]
}

model fertilizanteCalculosDetail {
  @@map("fertilizantecalculosdetail")
  id                     Int   @id @default(autoincrement())
  tipofertilizanteId     Int
  factorEmisionId        Int
  consumo                Float @db.Float
  cantidadAporte         Float @db.Float
  emisionDirecta         Float @db.Float
  totalEmisionesDirectas Float @db.Float
  emisionGEI             Float @db.Float
  sedeId                 Int   @db.Int
  fertilizanteCalculosId Int   @db.Int

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  TipoFertilizante     TipoFertilizante          @relation(fields: [tipofertilizanteId], references: [id])
  factorEmision        FactorEmisionFertilizante @relation(fields: [factorEmisionId], references: [id])
  sede                 Sede?                     @relation(fields: [sedeId], references: [id])
  fertilizanteCalculos fertilizanteCalculos      @relation(fields: [fertilizanteCalculosId], references: [id])
}

model consumoEnergia {
  @@map("consumoenergia")
  id               Int    @id @default(autoincrement())
  areaId           Int
  numeroSuministro String @db.VarChar(45)
  consumo          Float  @db.Float
  mes_id           Int
  anio_id          Int
  anio_mes         Int

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  mes  Mes?  @relation(fields: [mes_id], references: [id])
  anio Anio? @relation(fields: [anio_id], references: [id])
  area area? @relation(fields: [areaId], references: [id])
}

model area {
  @@map("area")
  id         Int      @id @default(autoincrement())
  nombre     String   @db.VarChar(45)
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
  sede_id    Int?

  sede Sede? @relation(fields: [sede_id], references: [id])

  ConsumoAgua               ConsumoAgua[]
  ConsumoAguaCalculos       ConsumoAguaCalculos[]
  consumoEnergia            consumoEnergia[]
  EnergiaCalculos           EnergiaCalculos[]
  EnergiaCalculosDetail     EnergiaCalculosDetail[]
  ConsumoAguaCalculosDetail ConsumoAguaCalculosDetail[]
}

model EnergiaCalculos {
  @@map("energiacalculos")
  id               Int   @id @default(autoincrement())
  consumoArea      Float @db.Float
  factorConversion Float @db.Float
  consumoTotal     Float @db.Float
  emisionCO2       Float @db.Float
  emisionCH4       Float @db.Float
  emisionN2O       Float @db.Float
  totalGEI         Float @db.Float
  areaId           Int   @db.Int
  periodoCalculoId Int?  @db.Int

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  area                  area?                   @relation(fields: [areaId], references: [id])
  PeriodoCalculo        PeriodoCalculo?         @relation(fields: [periodoCalculoId], references: [id])
  EnergiaCalculosDetail EnergiaCalculosDetail[]
}

model EnergiaCalculosDetail {
  @@map("energiacalculosdetail")
  id                     Int   @id @default(autoincrement())
  consumoArea            Float @db.Float
  factorConversion       Float @db.Float
  factorConversionSEINId Int   @db.Int
  consumoTotal           Float @db.Float
  emisionCO2             Float @db.Float
  emisionCH4             Float @db.Float
  emisionN2O             Float @db.Float
  totalGEI               Float @db.Float
  areaId                 Int
  energiaCalculosId      Int   @db.Int

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  area                 area?                @relation(fields: [areaId], references: [id])
  EnergiaCalculos      EnergiaCalculos      @relation(fields: [energiaCalculosId], references: [id])
  factorConversionSEIN factorConversionSEIN @relation(fields: [factorConversionSEINId], references: [id])
}

model factorConversionSEIN {
  @@map("factorconversionsein")
  id         Int      @id @default(autoincrement())
  factorCO2  Float    @db.Float
  factorCH4  Float    @db.Float
  factorN2O  Float    @db.Float
  anioId     Int      @unique
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  anio                  Anio                    @relation(fields: [anioId], references: [id])
  EnergiaCalculosDetail EnergiaCalculosDetail[]
}

model Taxi {
  @@map("taxi")
  id                Int    @id @default(autoincrement())
  unidadContratante String
  lugarSalida       String
  lugarDestino      String
  montoGastado      Float
  sede_id           Int
  mes_id            Int
  anio_id           Int
  anio_mes          Int

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  mes  Mes?  @relation(fields: [mes_id], references: [id])
  anio Anio? @relation(fields: [anio_id], references: [id])
  sede Sede? @relation(fields: [sede_id], references: [id])
}

// AGUA A3_5
model ConsumoAgua {
  @@map("consumoagua")
  id            Int     @id @default(autoincrement())
  consumo       Float   @db.Float
  codigoMedidor String? @db.VarChar(45)
  fuenteAgua    String  @db.VarChar(45) // Red Publica o Pozo
  area_id       Int?
  mes_id        Int
  anio_id       Int
  anio_mes      Int

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  anio Anio  @relation(fields: [anio_id], references: [id])
  mes  Mes   @relation(fields: [mes_id], references: [id])
  area area? @relation(fields: [area_id], references: [id])
}

model FactorEmisionAgua {
  @@map("factoremisionagua")
  id      Int   @id @default(autoincrement())
  factor  Float @db.Float
  anio_id Int

  anio                      Anio                        @relation(fields: [anio_id], references: [id])
  ConsumoAguaCalculosDetail ConsumoAguaCalculosDetail[]
}

model ConsumoAguaCalculos {
  @@map("consumoaguacalculos")
  id               Int   @id @default(autoincrement())
  consumoArea      Float @db.Float
  totalGEI         Float @db.Float
  areaId           Int
  periodoCalculoId Int?  @db.Int

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  area                      area?                       @relation(fields: [areaId], references: [id])
  PeriodoCalculo            PeriodoCalculo?             @relation(fields: [periodoCalculoId], references: [id])
  ConsumoAguaCalculosDetail ConsumoAguaCalculosDetail[]
}

model ConsumoAguaCalculosDetail {
  @@map("consumoaguacalculosdetail")
  id                    Int   @id @default(autoincrement())
  consumoArea           Float @db.Float
  factorEmisionAguaId   Int
  totalGEI              Float @db.Float
  areaId                Int
  consumoAguaCalculosId Int   @db.Int

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  area                area?               @relation(fields: [areaId], references: [id])
  consumoAguaCaluclos ConsumoAguaCalculos @relation(fields: [consumoAguaCalculosId], references: [id])
  factorEmisionAgua   FactorEmisionAgua?  @relation(fields: [factorEmisionAguaId], references: [id])
}

model PeriodoCalculo {
  @@map("periodocalculo")
  id                   Int                    @id @default(autoincrement())
  fechaInicio          String?
  fechaFin             String?
  yearInicio           String?
  yearFin              String?
  created_at           DateTime               @default(now())
  updated_at           DateTime               @updatedAt
  ConsumoAguaCalculos  ConsumoAguaCalculos[]
  EnergiaCalculos      EnergiaCalculos[]
  fertilizanteCalculos fertilizanteCalculos[]
  combustibleCalculos  combustibleCalculos[]
  ConsumoPapelCalculos ConsumoPapelCalculos[]
}
